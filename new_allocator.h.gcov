        -:    0:Source:/usr/include/c++/4.7/ext/new_allocator.h
        -:    0:Programs:1
        -:    1:// Allocator that wraps operator new -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2001, 2002, 2003, 2004, 2005, 2009, 2010
        -:    4:// Free Software Foundation, Inc.
        -:    5://
        -:    6:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    7:// software; you can redistribute it and/or modify it under the
        -:    8:// terms of the GNU General Public License as published by the
        -:    9:// Free Software Foundation; either version 3, or (at your option)
        -:   10:// any later version.
        -:   11:
        -:   12:// This library is distributed in the hope that it will be useful,
        -:   13:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   14:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   15:// GNU General Public License for more details.
        -:   16:
        -:   17:// Under Section 7 of GPL version 3, you are granted additional
        -:   18:// permissions described in the GCC Runtime Library Exception, version
        -:   19:// 3.1, as published by the Free Software Foundation.
        -:   20:
        -:   21:// You should have received a copy of the GNU General Public License and
        -:   22:// a copy of the GCC Runtime Library Exception along with this program;
        -:   23:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   24:// <http://www.gnu.org/licenses/>.
        -:   25:
        -:   26:/** @file ext/new_allocator.h
        -:   27: *  This file is a GNU extension to the Standard C++ Library.
        -:   28: */
        -:   29:
        -:   30:#ifndef _NEW_ALLOCATOR_H
        -:   31:#define _NEW_ALLOCATOR_H 1
        -:   32:
        -:   33:#include <bits/c++config.h>
        -:   34:#include <new>
        -:   35:#include <bits/functexcept.h>
        -:   36:#include <bits/move.h>
        -:   37:
        -:   38:namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
        -:   39:{
        -:   40:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:   41:
        -:   42:  using std::size_t;
        -:   43:  using std::ptrdiff_t;
        -:   44:
        -:   45:  /**
        -:   46:   *  @brief  An allocator that uses global new, as per [20.4].
        -:   47:   *  @ingroup allocators
        -:   48:   *
        -:   49:   *  This is precisely the allocator defined in the C++ Standard. 
        -:   50:   *    - all allocation calls operator new
        -:   51:   *    - all deallocation calls operator delete
        -:   52:   */
        -:   53:  template<typename _Tp>
        -:   54:    class new_allocator
        -:   55:    {
        -:   56:    public:
        -:   57:      typedef size_t     size_type;
        -:   58:      typedef ptrdiff_t  difference_type;
        -:   59:      typedef _Tp*       pointer;
        -:   60:      typedef const _Tp* const_pointer;
        -:   61:      typedef _Tp&       reference;
        -:   62:      typedef const _Tp& const_reference;
        -:   63:      typedef _Tp        value_type;
        -:   64:
        -:   65:      template<typename _Tp1>
        -:   66:        struct rebind
        -:   67:        { typedef new_allocator<_Tp1> other; };
        -:   68:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6detail4sep_ImNS2_11no_propertyEEEEEC2Ev called 24744 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorIN5boost6detail12adj_list_genINS1_14adjacency_listINS1_4setSENS1_4vecSENS1_9directedSENS1_11no_propertyES8_S8_NS1_5listSEEES6_S5_S7_S8_S8_S8_S9_E6config13stored_vertexEEC2Ev called 136 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost9list_edgeImNS2_11no_propertyEEEEEC2Ev called 136 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorIiEC2Ev called 4 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorImEC2Ev called 4 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEEC2Ev called 136 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEEC2Ev called 24744 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorIcEC2Ev called 0 returned 0% blocks executed 0%
    49904:   69:      new_allocator() _GLIBCXX_USE_NOEXCEPT { }
        -:   70:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6detail4sep_ImNS2_11no_propertyEEEEEC2ERKS8_ called 37652 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEEC2ERKS5_ called 62396 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorIcEC2ERKS1_ called 0 returned 0% blocks executed 0%
   100048:   71:      new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
        -:   72:
        -:   73:      template<typename _Tp1>
        -:   74:        new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
        -:   75:
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6detail4sep_ImNS2_11no_propertyEEEEED2Ev called 62396 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorIN5boost6detail12adj_list_genINS1_14adjacency_listINS1_4setSENS1_4vecSENS1_9directedSENS1_11no_propertyES8_S8_NS1_5listSEEES6_S5_S7_S8_S8_S8_S9_E6config13stored_vertexEED2Ev called 136 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorIiED2Ev called 4 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost9list_edgeImNS2_11no_propertyEEEEED2Ev called 136 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorImED2Ev called 4 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEED2Ev called 136 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEED2Ev called 87140 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorIcED2Ev called 0 returned 0% blocks executed 0%
   149952:   76:      ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
        -:   77:
        -:   78:      pointer
        -:   79:      address(reference __x) const _GLIBCXX_NOEXCEPT
        -:   80:      { return std::__addressof(__x); }
        -:   81:
        -:   82:      const_pointer
        -:   83:      address(const_reference __x) const _GLIBCXX_NOEXCEPT
        -:   84:      { return std::__addressof(__x); }
        -:   85:
        -:   86:      // NB: __n is permitted to be 0.  The C++ standard says nothing
        -:   87:      // about what the return value is when __n == 0.
        -:   88:      pointer
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6detail4sep_ImNS2_11no_propertyEEEEE8allocateEmPKv called 6212 returned 100% blocks executed 83%
function _ZN9__gnu_cxx13new_allocatorIN5boost6detail12adj_list_genINS1_14adjacency_listINS1_4setSENS1_4vecSENS1_9directedSENS1_11no_propertyES8_S8_NS1_5listSEEES6_S5_S7_S8_S8_S8_S9_E6config13stored_vertexEE8allocateEmPKv called 448 returned 100% blocks executed 83%
function _ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv called 32 returned 100% blocks executed 83%
function _ZN9__gnu_cxx13new_allocatorImE8allocateEmPKv called 32 returned 100% blocks executed 83%
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE8allocateEmPKv called 6212 returned 100% blocks executed 83%
function _ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEE8allocateEmPKv called 448 returned 100% blocks executed 83%
    13384:   89:      allocate(size_type __n, const void* = 0)
        -:   90:      { 
    13384:   91:	if (__n > this->max_size())
call    0 returned 100%
branch  1 taken 0% (fallthrough)
branch  2 taken 100%
call    3 returned 100%
branch  4 taken 0% (fallthrough)
branch  5 taken 100%
call    6 returned 100%
branch  7 taken 0% (fallthrough)
branch  8 taken 100%
call    9 returned 100%
branch 10 taken 0% (fallthrough)
branch 11 taken 100%
call   12 returned 100%
branch 13 taken 0% (fallthrough)
branch 14 taken 100%
call   15 returned 100%
branch 16 taken 0% (fallthrough)
branch 17 taken 100%
    #####:   92:	  std::__throw_bad_alloc();
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
        -:   93:
    13384:   94:	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
call    0 returned 100%
call    1 returned 100%
call    2 returned 100%
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
        -:   95:      }
        -:   96:
        -:   97:      // __p is not permitted to be a null pointer.
        -:   98:      void
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6detail4sep_ImNS2_11no_propertyEEEEE10deallocateEPS7_m called 6212 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorIN5boost6detail12adj_list_genINS1_14adjacency_listINS1_4setSENS1_4vecSENS1_9directedSENS1_11no_propertyES8_S8_NS1_5listSEEES6_S5_S7_S8_S8_S8_S9_E6config13stored_vertexEE10deallocateEPSD_m called 448 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost9list_edgeImNS2_11no_propertyEEEEE10deallocateEPS6_m called 0 returned 0% blocks executed 0%
function _ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim called 32 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorImE10deallocateEPmm called 32 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE10deallocateEPS4_m called 6212 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEE10deallocateEPS7_m called 448 returned 100% blocks executed 100%
    13384:   99:      deallocate(pointer __p, size_type)
    13384:  100:      { ::operator delete(__p); }
call    0 returned 100%
call    1 returned 100%
call    2 never executed
call    3 returned 100%
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
        -:  101:
        -:  102:      size_type
function _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6detail4sep_ImNS2_11no_propertyEEEEE8max_sizeEv called 6212 returned 100% blocks executed 100%
function _ZNK9__gnu_cxx13new_allocatorIN5boost6detail12adj_list_genINS1_14adjacency_listINS1_4setSENS1_4vecSENS1_9directedSENS1_11no_propertyES8_S8_NS1_5listSEEES6_S5_S7_S8_S8_S8_S9_E6config13stored_vertexEE8max_sizeEv called 1344 returned 100% blocks executed 100%
function _ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv called 96 returned 100% blocks executed 100%
function _ZNK9__gnu_cxx13new_allocatorImE8max_sizeEv called 96 returned 100% blocks executed 100%
function _ZNK9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE8max_sizeEv called 6212 returned 100% blocks executed 100%
function _ZNK9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEE8max_sizeEv called 1344 returned 100% blocks executed 100%
    15304:  103:      max_size() const _GLIBCXX_USE_NOEXCEPT
    15304:  104:      { return size_t(-1) / sizeof(_Tp); }
        -:  105:
        -:  106:#ifdef __GXX_EXPERIMENTAL_CXX0X__
        -:  107:      template<typename _Up, typename... _Args>
        -:  108:        void
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6detail4sep_ImNS2_11no_propertyEEEEE9constructIS7_IRKS6_EEEvPT_DpOT0_ called 6212 returned 100% blocks executed 67%
function _ZN9__gnu_cxx13new_allocatorImE9constructImImEEEvPT_DpOT0_ called 400 returned 100% blocks executed 83%
function _ZN9__gnu_cxx13new_allocatorIiE9constructIiIiEEEvPT_DpOT0_ called 400 returned 100% blocks executed 83%
function _ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEE9constructIS7_IS7_EEEvPT_DpOT0_ called 24744 returned 100% blocks executed 86%
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE9constructIS4_IRKS3_EEEvPT_DpOT0_ called 6212 returned 100% blocks executed 86%
    37968:  109:        construct(_Up* __p, _Args&&... __args)
    37968:  110:	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0%
branch  4 taken 100% (fallthrough)
branch  5 taken 0% (throw)
call    6 returned 100%
call    7 never executed
call    8 never executed
call    9 returned 100%
call   10 returned 100%
branch 11 taken 100% (fallthrough)
branch 12 taken 0%
call   13 returned 100%
call   14 returned 100%
branch 15 taken 100% (fallthrough)
branch 16 taken 0%
call   17 returned 100%
call   18 returned 100%
branch 19 taken 100% (fallthrough)
branch 20 taken 0%
call   21 returned 100%
call   22 returned 100%
call   23 returned 100%
branch 24 taken 100% (fallthrough)
branch 25 taken 0%
call   26 returned 100%
        -:  111:
        -:  112:      template<typename _Up>
        -:  113:        void 
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeIN5boost6detail4sep_ImNS2_11no_propertyEEEEE7destroyIS7_EEvPT_ called 6212 returned 100% blocks executed 100%
function _ZN9__gnu_cxx13new_allocatorImE7destroyImEEvPT_ called 0 returned 0% blocks executed 0%
function _ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ called 0 returned 0% blocks executed 0%
function _ZN9__gnu_cxx13new_allocatorISt10_List_nodeIN5boost9list_edgeImNS2_11no_propertyEEEEE7destroyIS6_EEvPT_ called 0 returned 0% blocks executed 0%
function _ZN9__gnu_cxx13new_allocatorISt3setISt4pairIiiESt4lessIS3_ESaIS3_EEE7destroyIS7_EEvPT_ called 0 returned 0% blocks executed 0%
function _ZN9__gnu_cxx13new_allocatorISt13_Rb_tree_nodeISt4pairIiiEEE7destroyIS4_EEvPT_ called 6212 returned 100% blocks executed 100%
    12424:  114:        destroy(_Up* __p) { __p->~_Up(); }
call    0 returned 100%
call    1 never executed
        -:  115:#else
        -:  116:      // _GLIBCXX_RESOLVE_LIB_DEFECTS
        -:  117:      // 402. wrong new expression in [some_] allocator::construct
        -:  118:      void 
        -:  119:      construct(pointer __p, const _Tp& __val) 
        -:  120:      { ::new((void *)__p) _Tp(__val); }
        -:  121:
        -:  122:      void 
        -:  123:      destroy(pointer __p) { __p->~_Tp(); }
        -:  124:#endif
        -:  125:    };
        -:  126:
        -:  127:  template<typename _Tp>
        -:  128:    inline bool
        -:  129:    operator==(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
        -:  130:    { return true; }
        -:  131:  
        -:  132:  template<typename _Tp>
        -:  133:    inline bool
        -:  134:    operator!=(const new_allocator<_Tp>&, const new_allocator<_Tp>&)
        -:  135:    { return false; }
        -:  136:
        -:  137:_GLIBCXX_END_NAMESPACE_VERSION
        -:  138:} // namespace
        -:  139:
        -:  140:#endif
